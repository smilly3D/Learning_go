package main

import (
	"fmt"
	"math"
	"time"
)

// ðŸ“Œ Example01 â€“ Switch bÃ¡sico
func doBasic(x int) {
	switch x {
	case 1:
		fmt.Println("x Ã© 1")
	case 2:
		fmt.Println("x Ã© 2")
	default:
		fmt.Println("x nÃ£o Ã© 1 nem 2")
	}
}

// ðŸ“Œ Example02 â€“ Fallthrough
func doFallthrough(x int) {
	switch x {
	case 1:
		fmt.Println("x Ã© 1")
		fallthrough
	case 2:
		fmt.Println("x Ã© 2")
	default:
		fmt.Println("x nÃ£o Ã© 1 nem 2")
	}
}

// ðŸ“Œ Example03 â€“ Switch sem expressÃ£o
func doWithCondition(x int) {
	switch {
	case x == 1:
		fmt.Println("x Ã© 1")
	case "abc" == "foo":
		fmt.Println("x Ã© foo")
	default:
		fmt.Println("nenhuma condiÃ§Ã£o satisfeita")
	}
}

// ðŸ“Œ Example04 â€“ Switch sem expressÃ£o com time
func isWeekday(t time.Time) bool {
	switch {
	case t.Weekday() > 0 && t.Weekday() < 6:
		return true
	default:
		return false
	}
}

// ðŸ“Œ Example05 â€“ Switch com declaraÃ§Ã£o de variÃ¡vel
func switchWithDeclaration() {
	switch x := math.Sqrt(4); x {
	case 2:
		fmt.Println("resultado Ã© 2")
	default:
		fmt.Println("algo deu errado")
	}
}

// ðŸ“Œ Example06 â€“ MÃºltiplos valores no mesmo case
func isWeekend(t time.Time) bool {
	switch t.Weekday() {
	case time.Saturday, time.Sunday:
		return true
	default:
		return false
	}
}

// ðŸ“Œ Example07 â€“ Type switch
func typeSwitch(x any) {
	switch x.(type) {
	case string:
		fmt.Println("tipo string")
	case int:
		fmt.Println("tipo int")
	case nil:
		fmt.Println("tipo nil")
	default:
		fmt.Println("outro tipo")
	}
}

// ðŸ“Œ Example08 â€“ Type switch com atribuiÃ§Ã£o
func typeSwitchWithAssign(x any) {
	switch t := x.(type) {
	case string:
		takeString(t)
	case int:
		fmt.Println("int")
	case nil:
		fmt.Println("nil")
	default:
		fmt.Println("outro tipo")
	}
}

func takeString(s string) {
	fmt.Println("String recebida:", s)
}

// ðŸ§ª ExecuÃ§Ã£o dos exemplos
func main() {
	fmt.Println("Exemplos de switch em Go:")

	// doBasic(1)
	// doBasic(3)

	// doFallthrough(1)

	// doWithCondition(1)

	// fmt.Println("Ã‰ dia Ãºtil?", isWeekday(time.Now()))

	// switchWithDeclaration()

	// fmt.Println("Ã‰ final de semana?", isWeekend(time.Now()))

	// typeSwitch("abc")
	// typeSwitch(42)
	// typeSwitch(nil)

	// typeSwitchWithAssign("abc")
}
